%implements s13_b0_ks2xg_SystemInitialize "C"

%function SystemInitialize(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T tmp;
int32_T i;
int32_T t;
uint32_T tseed;
%closefile localVarDecl
%assign _modelSS = ""

%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
/* {S!d516}InitializeConditions for Integrator: '<S30>/Integrator6' */
sim_ROV_v0_R2018b_X.Integrator6_CSTATE = sim_ROV_v0_R2018b_P.Integrator6_IC;
/* {S!d518}InitializeConditions for Integrator: '<S30>/Integrator7' */
sim_ROV_v0_R2018b_X.Integrator7_CSTATE = sim_ROV_v0_R2018b_P.Integrator7_IC;
/* {S!d520}InitializeConditions for Integrator: '<S30>/Integrator8' */
sim_ROV_v0_R2018b_X.Integrator8_CSTATE = sim_ROV_v0_R2018b_P.Integrator8_IC;
/* {S!d522}InitializeConditions for Integrator: '<S30>/Integrator' */
sim_ROV_v0_R2018b_X.Integrator_CSTATE = sim_ROV_v0_R2018b_P.Integrator_IC;
/* {S!d524}InitializeConditions for Integrator: '<S30>/Integrator1' */
sim_ROV_v0_R2018b_X.Integrator1_CSTATE = sim_ROV_v0_R2018b_P.Integrator1_IC;
/* {S!d526}InitializeConditions for Integrator: '<S30>/Integrator2' */
sim_ROV_v0_R2018b_X.Integrator2_CSTATE = sim_ROV_v0_R2018b_P.Integrator2_IC;
/* {S!d528}InitializeConditions for Integrator: '<S30>/Integrator3' */
sim_ROV_v0_R2018b_X.Integrator3_CSTATE = sim_ROV_v0_R2018b_P.Integrator3_IC;
/* {S!d530}InitializeConditions for Integrator: '<S30>/Integrator4' */
sim_ROV_v0_R2018b_X.Integrator4_CSTATE = sim_ROV_v0_R2018b_P.Integrator4_IC;
/* {S!d532}InitializeConditions for Integrator: '<S30>/Integrator5' */
sim_ROV_v0_R2018b_X.Integrator5_CSTATE = sim_ROV_v0_R2018b_P.Integrator5_IC;
/* {S!d534}InitializeConditions for SecondOrderIntegrator: '<S53>/Integrator, Second-Order Limited' */
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited_CS[0] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited_IC;
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited_CS[1] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited_IC;
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited_CS[2] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited_IC;
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited_CS[3] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited__c;
sim_ROV_v0_R2018b_DW.IntegratorSecondOrderLimited_MO[0] = 0;
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited_CS[4] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited__c;
sim_ROV_v0_R2018b_DW.IntegratorSecondOrderLimited_MO[1] = 0;
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited_CS[5] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited__c;
sim_ROV_v0_R2018b_DW.IntegratorSecondOrderLimited_MO[2] = 0;
/* {S!d536}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 1' */
sim_ROV_v0_R2018b_X.T200TransferFunction1_CSTATE[0] = 0.0;
/* {S!d538}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 2' */
sim_ROV_v0_R2018b_X.T200TransferFunction2_CSTATE[0] = 0.0;
/* {S!d540}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 3' */
sim_ROV_v0_R2018b_X.T200TransferFunction3_CSTATE[0] = 0.0;
/* {S!d542}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 4' */
sim_ROV_v0_R2018b_X.T200TransferFunction4_CSTATE[0] = 0.0;
/* {S!d544}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 5' */
sim_ROV_v0_R2018b_X.T200TransferFunction5_CSTATE[0] = 0.0;
/* {S!d546}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 6' */
sim_ROV_v0_R2018b_X.T200TransferFunction6_CSTATE[0] = 0.0;
/* {S!d548}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 7' */
sim_ROV_v0_R2018b_X.T200TransferFunction7_CSTATE[0] = 0.0;
/* {S!d550}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 8' */
sim_ROV_v0_R2018b_X.T200TransferFunction8_CSTATE[0] = 0.0;
/* {S!d552}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 1' */
sim_ROV_v0_R2018b_X.T200TransferFunction1_CSTATE[1] = 0.0;
/* {S!d554}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 2' */
sim_ROV_v0_R2018b_X.T200TransferFunction2_CSTATE[1] = 0.0;
/* {S!d556}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 3' */
sim_ROV_v0_R2018b_X.T200TransferFunction3_CSTATE[1] = 0.0;
/* {S!d558}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 4' */
sim_ROV_v0_R2018b_X.T200TransferFunction4_CSTATE[1] = 0.0;
/* {S!d560}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 5' */
sim_ROV_v0_R2018b_X.T200TransferFunction5_CSTATE[1] = 0.0;
/* {S!d562}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 6' */
sim_ROV_v0_R2018b_X.T200TransferFunction6_CSTATE[1] = 0.0;
/* {S!d564}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 7' */
sim_ROV_v0_R2018b_X.T200TransferFunction7_CSTATE[1] = 0.0;
/* {S!d566}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 8' */
sim_ROV_v0_R2018b_X.T200TransferFunction8_CSTATE[1] = 0.0;
/* {S!d568}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 1' */
sim_ROV_v0_R2018b_X.T200TransferFunction1_CSTATE[2] = 0.0;
/* {S!d570}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 2' */
sim_ROV_v0_R2018b_X.T200TransferFunction2_CSTATE[2] = 0.0;
/* {S!d572}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 3' */
sim_ROV_v0_R2018b_X.T200TransferFunction3_CSTATE[2] = 0.0;
/* {S!d574}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 4' */
sim_ROV_v0_R2018b_X.T200TransferFunction4_CSTATE[2] = 0.0;
/* {S!d576}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 5' */
sim_ROV_v0_R2018b_X.T200TransferFunction5_CSTATE[2] = 0.0;
/* {S!d578}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 6' */
sim_ROV_v0_R2018b_X.T200TransferFunction6_CSTATE[2] = 0.0;
/* {S!d580}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 7' */
sim_ROV_v0_R2018b_X.T200TransferFunction7_CSTATE[2] = 0.0;
/* {S!d582}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 8' */
sim_ROV_v0_R2018b_X.T200TransferFunction8_CSTATE[2] = 0.0;
/* {S!d584}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 1' */
sim_ROV_v0_R2018b_X.T200TransferFunction1_CSTATE[3] = 0.0;
/* {S!d586}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 2' */
sim_ROV_v0_R2018b_X.T200TransferFunction2_CSTATE[3] = 0.0;
/* {S!d588}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 3' */
sim_ROV_v0_R2018b_X.T200TransferFunction3_CSTATE[3] = 0.0;
/* {S!d590}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 4' */
sim_ROV_v0_R2018b_X.T200TransferFunction4_CSTATE[3] = 0.0;
/* {S!d592}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 5' */
sim_ROV_v0_R2018b_X.T200TransferFunction5_CSTATE[3] = 0.0;
/* {S!d594}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 6' */
sim_ROV_v0_R2018b_X.T200TransferFunction6_CSTATE[3] = 0.0;
/* {S!d596}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 7' */
sim_ROV_v0_R2018b_X.T200TransferFunction7_CSTATE[3] = 0.0;
/* {S!d598}InitializeConditions for TransferFcn: '<S20>/T200 Transfer Function 8' */
sim_ROV_v0_R2018b_X.T200TransferFunction8_CSTATE[3] = 0.0;
for (i = 0; i < 6; i++) {
    /* {S!d600}InitializeConditions for Integrator: '<S18>/Integrator' */
    sim_ROV_v0_R2018b_X.Integrator_CSTATE_o[i] = sim_ROV_v0_R2018b_P.Integrator_IC_m;
    /* {S!d602}InitializeConditions for Integrator: '<S19>/Integrator' */
    sim_ROV_v0_R2018b_X.Integrator_CSTATE_e[i] = sim_ROV_v0_R2018b_P.Integrator_IC_j;
}
/* {S!d604}InitializeConditions for RandomNumber: '<S51>/White Noise' */
tmp = std::floor(sim_ROV_v0_R2018b_P.ThreeaxisGyroscope_g_seeds[0]);
if (std::isnan(tmp) || std::isinf(tmp)) {
    tmp = 0.0;
} else {
    tmp = std::fmod(tmp, 4.294967296E+9);
}
tseed = tmp < 0.0 ? static_cast<uint32_T>(-static_cast<int32_T>(static_cast<uint32_T>(-tmp))) : static_cast<uint32_T>(tmp);
i = static_cast<int32_T>(tseed >> 16U);
t = static_cast<int32_T>(tseed & 32768U);
tseed = ((((tseed - (static_cast<uint32_T>(i) << 16U)) + static_cast<uint32_T>(t)) << 16U) + static_cast<uint32_T>(t)) + static_cast<uint32_T>(i);
if (tseed < 1U) {
    tseed = 1144108930U;
} else if (tseed > 2147483646U) {
    tseed = 2147483646U;
}
sim_ROV_v0_R2018b_DW.RandSeed[0] = tseed;
sim_ROV_v0_R2018b_DW.NextOutput[0] = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&sim_ROV_v0_R2018b_DW.RandSeed[0]"], 2, 3, 3))> * sim_ROV_v0_R2018b_P.WhiteNoise_StdDev + sim_ROV_v0_R2018b_P.WhiteNoise_Mean;
tmp = std::floor(sim_ROV_v0_R2018b_P.ThreeaxisGyroscope_g_seeds[1]);
if (std::isnan(tmp) || std::isinf(tmp)) {
    tmp = 0.0;
} else {
    tmp = std::fmod(tmp, 4.294967296E+9);
}
tseed = tmp < 0.0 ? static_cast<uint32_T>(-static_cast<int32_T>(static_cast<uint32_T>(-tmp))) : static_cast<uint32_T>(tmp);
i = static_cast<int32_T>(tseed >> 16U);
t = static_cast<int32_T>(tseed & 32768U);
tseed = ((((tseed - (static_cast<uint32_T>(i) << 16U)) + static_cast<uint32_T>(t)) << 16U) + static_cast<uint32_T>(t)) + static_cast<uint32_T>(i);
if (tseed < 1U) {
    tseed = 1144108930U;
} else if (tseed > 2147483646U) {
    tseed = 2147483646U;
}
sim_ROV_v0_R2018b_DW.RandSeed[1] = tseed;
sim_ROV_v0_R2018b_DW.NextOutput[1] = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&sim_ROV_v0_R2018b_DW.RandSeed[1]"], 2, 3, 4))> * sim_ROV_v0_R2018b_P.WhiteNoise_StdDev + sim_ROV_v0_R2018b_P.WhiteNoise_Mean;
tmp = std::floor(sim_ROV_v0_R2018b_P.ThreeaxisGyroscope_g_seeds[2]);
if (std::isnan(tmp) || std::isinf(tmp)) {
    tmp = 0.0;
} else {
    tmp = std::fmod(tmp, 4.294967296E+9);
}
tseed = tmp < 0.0 ? static_cast<uint32_T>(-static_cast<int32_T>(static_cast<uint32_T>(-tmp))) : static_cast<uint32_T>(tmp);
i = static_cast<int32_T>(tseed >> 16U);
t = static_cast<int32_T>(tseed & 32768U);
tseed = ((((tseed - (static_cast<uint32_T>(i) << 16U)) + static_cast<uint32_T>(t)) << 16U) + static_cast<uint32_T>(t)) + static_cast<uint32_T>(i);
if (tseed < 1U) {
    tseed = 1144108930U;
} else if (tseed > 2147483646U) {
    tseed = 2147483646U;
}
sim_ROV_v0_R2018b_DW.RandSeed[2] = tseed;
sim_ROV_v0_R2018b_DW.NextOutput[2] = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&sim_ROV_v0_R2018b_DW.RandSeed[2]"], 2, 3, 5))> * sim_ROV_v0_R2018b_P.WhiteNoise_StdDev + sim_ROV_v0_R2018b_P.WhiteNoise_Mean;
/* {E!d604}End of InitializeConditions for RandomNumber: '<S51>/White Noise' */

/* {S!d606}InitializeConditions for Derivative: '<S19>/Derivative' */
sim_ROV_v0_R2018b_DW.TimeStampA = %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>;
sim_ROV_v0_R2018b_DW.TimeStampB = %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>;
/* {S!d608}InitializeConditions for Integrator: '<S1>/Integrator' */
for (i = 0; i < 6; i++) {
    sim_ROV_v0_R2018b_X.Integrator_CSTATE_i[i] = sim_ROV_v0_R2018b_P.Integrator_IC_a;
}
/* {E!d608}End of InitializeConditions for Integrator: '<S1>/Integrator' */

/* {S!d610}InitializeConditions for SecondOrderIntegrator: '<S41>/Integrator, Second-Order Limited' */
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited__a[0] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited__j;
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited__a[1] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited__j;
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited__a[2] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited__j;
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited__a[3] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited__e;
sim_ROV_v0_R2018b_DW.IntegratorSecondOrderLimited__o[0] = 0;
/* {S!d612}InitializeConditions for RandomNumber: '<S37>/White Noise' */
tmp = std::floor(sim_ROV_v0_R2018b_P.ThreeaxisAccelerometer_a_seeds[0]);
if (std::isnan(tmp) || std::isinf(tmp)) {
    tmp = 0.0;
} else {
    tmp = std::fmod(tmp, 4.294967296E+9);
}
tseed = tmp < 0.0 ? static_cast<uint32_T>(-static_cast<int32_T>(static_cast<uint32_T>(-tmp))) : static_cast<uint32_T>(tmp);
i = static_cast<int32_T>(tseed >> 16U);
t = static_cast<int32_T>(tseed & 32768U);
tseed = ((((tseed - (static_cast<uint32_T>(i) << 16U)) + static_cast<uint32_T>(t)) << 16U) + static_cast<uint32_T>(t)) + static_cast<uint32_T>(i);
if (tseed < 1U) {
    tseed = 1144108930U;
} else if (tseed > 2147483646U) {
    tseed = 2147483646U;
}
sim_ROV_v0_R2018b_DW.RandSeed_l[0] = tseed;
sim_ROV_v0_R2018b_DW.NextOutput_p[0] = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&sim_ROV_v0_R2018b_DW.RandSeed_l[0]"], 2, 3, 0))> * sim_ROV_v0_R2018b_P.WhiteNoise_StdDev_j + sim_ROV_v0_R2018b_P.WhiteNoise_Mean_g;
/* {S!d614}InitializeConditions for SecondOrderIntegrator: '<S41>/Integrator, Second-Order Limited' */
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited__a[4] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited__e;
sim_ROV_v0_R2018b_DW.IntegratorSecondOrderLimited__o[1] = 0;
/* {S!d616}InitializeConditions for RandomNumber: '<S37>/White Noise' */
tmp = std::floor(sim_ROV_v0_R2018b_P.ThreeaxisAccelerometer_a_seeds[1]);
if (std::isnan(tmp) || std::isinf(tmp)) {
    tmp = 0.0;
} else {
    tmp = std::fmod(tmp, 4.294967296E+9);
}
tseed = tmp < 0.0 ? static_cast<uint32_T>(-static_cast<int32_T>(static_cast<uint32_T>(-tmp))) : static_cast<uint32_T>(tmp);
i = static_cast<int32_T>(tseed >> 16U);
t = static_cast<int32_T>(tseed & 32768U);
tseed = ((((tseed - (static_cast<uint32_T>(i) << 16U)) + static_cast<uint32_T>(t)) << 16U) + static_cast<uint32_T>(t)) + static_cast<uint32_T>(i);
if (tseed < 1U) {
    tseed = 1144108930U;
} else if (tseed > 2147483646U) {
    tseed = 2147483646U;
}
sim_ROV_v0_R2018b_DW.RandSeed_l[1] = tseed;
sim_ROV_v0_R2018b_DW.NextOutput_p[1] = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&sim_ROV_v0_R2018b_DW.RandSeed_l[1]"], 2, 3, 1))> * sim_ROV_v0_R2018b_P.WhiteNoise_StdDev_j + sim_ROV_v0_R2018b_P.WhiteNoise_Mean_g;
/* {S!d618}InitializeConditions for SecondOrderIntegrator: '<S41>/Integrator, Second-Order Limited' */
sim_ROV_v0_R2018b_X.IntegratorSecondOrderLimited__a[5] = sim_ROV_v0_R2018b_P.IntegratorSecondOrderLimited__e;
sim_ROV_v0_R2018b_DW.IntegratorSecondOrderLimited__o[2] = 0;
/* {S!d620}InitializeConditions for RandomNumber: '<S37>/White Noise' */
tmp = std::floor(sim_ROV_v0_R2018b_P.ThreeaxisAccelerometer_a_seeds[2]);
if (std::isnan(tmp) || std::isinf(tmp)) {
    tmp = 0.0;
} else {
    tmp = std::fmod(tmp, 4.294967296E+9);
}
tseed = tmp < 0.0 ? static_cast<uint32_T>(-static_cast<int32_T>(static_cast<uint32_T>(-tmp))) : static_cast<uint32_T>(tmp);
i = static_cast<int32_T>(tseed >> 16U);
t = static_cast<int32_T>(tseed & 32768U);
tseed = ((((tseed - (static_cast<uint32_T>(i) << 16U)) + static_cast<uint32_T>(t)) << 16U) + static_cast<uint32_T>(t)) + static_cast<uint32_T>(i);
if (tseed < 1U) {
    tseed = 1144108930U;
} else if (tseed > 2147483646U) {
    tseed = 2147483646U;
}
sim_ROV_v0_R2018b_DW.RandSeed_l[2] = tseed;
sim_ROV_v0_R2018b_DW.NextOutput_p[2] = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&sim_ROV_v0_R2018b_DW.RandSeed_l[2]"], 2, 3, 2))> * sim_ROV_v0_R2018b_P.WhiteNoise_StdDev_j + sim_ROV_v0_R2018b_P.WhiteNoise_Mean_g;
/* {S!d622}SystemInitialize for MATLAB Function: '<S24>/hydrostatics' */
sim_ROV_v0_R2018b_DW.sfEvent_o = sim_ROV_v0_R2018b_CALL_EVENT;
sim_ROV_v0_R2018b_DW.is_active_c1_sim_ROV_v0_R2018b = 0U;
/* {S!d624}SystemInitialize for MATLAB Function: '<S22>/Rigid Body Coriolis & Centripetal' */
sim_ROV_v0_R2018b_DW.sfEvent_ou = sim_ROV_v0_R2018b_CALL_EVENT;
sim_ROV_v0_R2018b_DW.is_active_c2_sim_ROV_v0_R2018b = 0U;
/* {S!d626}SystemInitialize for MATLAB Function: '<S22>/Added Coriolis & Centripetal' */
sim_ROV_v0_R2018b_DW.sfEvent_i = sim_ROV_v0_R2018b_CALL_EVENT;
sim_ROV_v0_R2018b_DW.is_active_c4_sim_ROV_v0_R2018b = 0U;
/* {S!d628}SystemInitialize for MATLAB Function: '<S19>/kinematics' */
sim_ROV_v0_R2018b_DW.sfEvent = sim_ROV_v0_R2018b_CALL_EVENT;
sim_ROV_v0_R2018b_DW.is_active_c3_sim_ROV_v0_R2018b = 0U;
/* {S!d630}SystemInitialize for MATLAB Function: '<S16>/Normalization' */
sim_ROV_v0_R2018b_DW.sfEvent_c = sim_ROV_v0_R2018b_CALL_EVENT;
sim_ROV_v0_R2018b_DW.is_active_c6_sim_ROV_v0_R2018b = 0U;
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[7], "SystemInitialize",0)
%if SLibCG_SystemFcnArgAccessed("sim_ROV_v0__LowpassFilter3_Init",7,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("sim_ROV_v0__LowpassFilter3_Init", ["%<_modelSS>", "sim_ROV_v0_R2018b_B.Saturation[0]", "&sim_ROV_v0_R2018b_DW.LowpassFilter3"], 7, 0, 4, 0, 4, 9)>\
%assign ss = ::CompiledModel.System[7]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[7], "SystemInitialize",0)
%if SLibCG_SystemFcnArgAccessed("sim_ROV_v0__LowpassFilter3_Init",7,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("sim_ROV_v0__LowpassFilter3_Init", ["%<_modelSS>", "sim_ROV_v0_R2018b_B.Saturation[1]", "&sim_ROV_v0_R2018b_DW.LowpassFilter4"], 7, 1, 4, 0, 4, 9)>\
%assign ss = ::CompiledModel.System[7]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[7], "SystemInitialize",0)
%if SLibCG_SystemFcnArgAccessed("sim_ROV_v0__LowpassFilter3_Init",7,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("sim_ROV_v0__LowpassFilter3_Init", ["%<_modelSS>", "sim_ROV_v0_R2018b_B.Saturation[2]", "&sim_ROV_v0_R2018b_DW.LowpassFilter5"], 7, 2, 4, 0, 4, 9)>\
%assign ss = ::CompiledModel.System[7]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[6], "SystemInitialize",0)
%if SLibCG_SystemFcnArgAccessed("sim_ROV_v0_R_LowpassFilter_Init",6,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("sim_ROV_v0_R_LowpassFilter_Init", ["%<_modelSS>", "sim_ROV_v0_R2018b_B.Saturation_m[0]", "&sim_ROV_v0_R2018b_DW.LowpassFilter"], 6, 0, 4, 0, 4, 9)>\
%assign ss = ::CompiledModel.System[6]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[6], "SystemInitialize",0)
%if SLibCG_SystemFcnArgAccessed("sim_ROV_v0_R_LowpassFilter_Init",6,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("sim_ROV_v0_R_LowpassFilter_Init", ["%<_modelSS>", "sim_ROV_v0_R2018b_B.Saturation_m[1]", "&sim_ROV_v0_R2018b_DW.LowpassFilter1"], 6, 1, 4, 0, 4, 9)>\
%assign ss = ::CompiledModel.System[6]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[6], "SystemInitialize",0)
%if SLibCG_SystemFcnArgAccessed("sim_ROV_v0_R_LowpassFilter_Init",6,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("sim_ROV_v0_R_LowpassFilter_Init", ["%<_modelSS>", "sim_ROV_v0_R2018b_B.Saturation_m[2]", "&sim_ROV_v0_R2018b_DW.LowpassFilter2"], 6, 2, 4, 0, 4, 9)>\
%assign ss = ::CompiledModel.System[6]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%<SLibInsertInitPeriodicCStatesFcn(system)>
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedSystemInitializeLocalVars", localVarDecl)>
%endfunction
%function SystemInitializeFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void SystemInitialize(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(2, 3, fcnProtoType)>
%endfunction
